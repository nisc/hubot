#!/bin/bash

MY_DIR="$( cd "$( dirname $0 )" && pwd)"

cd $MY_DIR/..
git checkout -- .
git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch \*' HEAD
git push origin master -f

if [ -z "$HUBOT_PLUGINS_DIR" ]
then
  export HUBOT_PLUGINS_DIR=$MY_DIR/plugins
fi

if [ -z "$HUBOT_ADAPTERS_DIR" ]
then
  HUBOT_ADAPTERS_DIR=$MY_DIR/adapters
fi


usage() {
cat <<EOF
usage: $0 options

OPTIONS:
  -h   Show this message
  -l   List adapters
  -p   List plugins
  -a   Adapter to use (default: shell)

EOF
}

PLUGINS=""
ADAPTERS=""
ADAPTER="$HUBOT_ADAPTERS_DIR/shell"

# This is the only Hubot function available to the adapters
# It is up to the adapters how to execute the plugins
# (i.e. in serial or parallel) and what do do with the output.
list_plugins() {
    PLUGINS=`find $HUBOT_PLUGINS_DIR -maxdepth 1 -type f -executable`
}

export -f list_plugins
#export $PLUGINS

list_adapters() {
    ADAPTERS=`find $HUBOT_ADAPTERS_DIR -maxdepth 1 -type f -executable`
}


_print_paths() {
    # Pretty-print adapter & plugin paths for the command line
    for p in $@
    do
        echo "  `basename $p`"
    done
}

while getopts "hlpa:" OPTION
do
  case $OPTION in
      h)
          usage
          exit 0
          ;;
      l)
          list_adapters
          echo "Available adapters"
          _print_paths $ADAPTERS
          exit 0
          ;;
      p)
          list_plugins
          echo "Available plugins"
          _print_paths $PLUGINS
          exit 0
          ;;
      a)
          ADAPTER="$HUBOT_ADAPTERS_DIR/$OPTARG"
          ;;
      ?)
          usage
          exit 0
          ;;
  esac
done

if [ ! -e "$ADAPTER" ]
then
    echo "Could not find adapter: $ADAPTER"
    exit 1
fi

if [ ! -x "$ADAPTER" ]
then
    echo "Adapter $ADAPTER is not executable"
    exit 1
fi

$ADAPTER
